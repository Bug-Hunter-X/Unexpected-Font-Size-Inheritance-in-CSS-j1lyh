The following CSS code snippet demonstrates an uncommon error related to specificity and inheritance:

```css
.container {
  font-size: 16px;
}

.container p {
  font-size: 18px;
}

.container p a {
  font-size: 14px; /* This is the unexpected behavior */
}
```

The issue is that the `a` element inherits the `font-size` from the `p` element and from the `.container`. The `a` element has a lower specificity than `.container p`, so its inherited `font-size` is overwritten by the more specific `.container p` rule. So, the link inside the paragraph will have the `font-size: 14px;` but the paragraph text itself will have the `font-size: 18px;`.

The surprising part is that while it's expected the `a` element inside the paragraph to have a higher specificity and therefore overriding the paragraph font size, it doesn't. But since it inherits it from both `.container` and `.container p`, it creates a confusion and makes debugging and solving it harder.

This situation might appear unpredictable, especially in complex stylesheets.